# vim: syntax=apache:

{% import 'macros.cfg' as macros with context %}

{% if namevirtualhost is defined and namevirtualhost != '' -%}
NameVirtualHost {{ interface }}:{{ http_port }}
{% if ssl -%}
NameVirtualHost {{ interface }}:{{ https_port }}
{%- endif %}
{%- endif %}


{% if ssl and ssl != 'only' -%}
<VirtualHost {{ interface }}:{{ http_port}}>
    ServerName {{ sitename }}
    {% for a in aliases -%}
    ServerAlias {{ a }}
    {%- endfor %}
    ServerAdmin {{ serveradmin }}

    {{ macros.log(sitename) }}

    {% block redirect_body -%}
    ProxyRequests Off
    {%- endblock redirect_body %}
    RewriteEngine On
    {{ macros.get_redirect(ssl, sitename) }}
</VirtualHost>
{%- endif %}


{% for r in redirects -%}
<VirtualHost {{ interface }}:{{ http_port }}>
    ServerName {{ r }}
    ServerAdmin {{ serveradmin }}

    {{ macros.log(r) }}

    ProxyRequests Off
    RewriteEngine On
    {{ macros.get_redirect(ssl, sitename) }}
</VirtualHost>
{% endfor %}

{% set vhost_port = https_port if ssl else http_port %}
<VirtualHost {{ interface }}:{{ vhost_port }}>
    ServerName {{ sitename }}
    {% for a in aliases -%}
    ServerAlias {{ a }}
    {%- endfor %}
    ServerAdmin {{ serveradmin }}

    {{ macros.log(("ssl-" if ssl else "")  ~ sitename) }}

    {% if ssl -%}
    SSLEngine on
    SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
    SSLCertificateFile {{ sslcert }}
    SSLCertificateKeyFile {{ sslkey }}
    {% for a in sslca -%}
    SSLCACertificateFile {{ a }}
    {%- endfor %}
    {% if sslcachainfile -%}
    SSLCertificateChainFile {{ sslcachainfile }}
    {%- endif %}
    {%- endif %}

    {% if realm -%}
    <Location />
        Options Indexes FollowSymLinks MultiViews
        Order Allow,Deny
        allow from all
        AuthType Basic
        AuthName "{{ realm }}"
        AuthUserFile {{ passwdfile }}
        Require user {{ username }}
    </Location>
    {%- endif %}

    {% if allowpurge is defined -%}
    <Location />
        <LimitExcept GET POST HEAD>
            Order Deny,Allow
            Deny from all
            {% for a in allowpurge.split() -%}
            Allow from {{ a }}
            {%- endfor %}
        </LimitExcept>
    </Location>
    {%- endif %}

    {% for p in protected %}
    <Location {{ p['uri'] }}>
        Order Allow,Deny
        allow from all
        AuthType Basic
        AuthName "{{ p['name'] }}"
        AuthUserFile {{ passwdfile }}
        Require user {{ p['username'] }}
    </Location>
    {% endfor %}
    
    {% block body -%}

    ProxyPreserveHost On
    <Proxy *>
      Allow from all
    </Proxy>
    ProxyRequests Off

    RewriteEngine On

    {% for r in rewrites -%}
    RewriteRule {{ r['source'] }} {{ r['destination'] }} [{{ r['flags'] }}]
    {%- endfor %}

    
    RewriteRule ^/(.*)$ http://localhost:{{ proxyport }}/VirtualHostBase/http{{ 's' if ssl else '' }}/{{ sitename }}:{{ vhost_port }}/{{ portal }}/VirtualHostRoot/$1 [L,P]
    {%- endblock %}
</VirtualHost>

# conditional, include lines
