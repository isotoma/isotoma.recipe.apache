Detailed Description
********************

Simple creation of an apache config
===================================

Lets create a minimal `buildout.cfg` file::

  >>> write('buildout.cfg',
  ... '''
  ... [buildout]
  ... parts = apache
  ... offline = true
  ...
  ... [apache]
  ... recipe = isotoma.recipe.apache:wsgi
  ... serveradmin = nobody@localhost
  ... interface = 192.168.0.99
  ... sitename = localhost
  ... daemon = no
  ... wsgi = /bin/foo.wsgi
  ... ''')

Now we can run buildout::

  >>> print system(join('bin', 'buildout')),
  Installing apache.
  Unused options for apache: 'sitename' 'wsgi' 'serveradmin' 'interface'.

The template was indeed created::

  >>> cat('parts/apache/apache.cfg')
  # vim: syntax=apache:
  <BLANKLINE>
  <VirtualHost 192.168.0.99:80>
      ServerName localhost
      ServerAdmin nobody@localhost
      CustomLog /var/log/apache2/localhost-access.log combined
      ErrorLog /var/log/apache2/localhost-error.log
      UseCanonicalName Off
      Options -Indexes
  <BLANKLINE>
  <BLANKLINE>
  <BLANKLINE>
      WSGIScriptAlias / /bin/foo.wsgi
  </VirtualHost>
  <BLANKLINE>
  # conditional, include lines


Using the deamon mode
=====================

Now lets switch to use WSGIProcessGroup and WSGIDaemonProcess::

  >>> write('buildout.cfg',
  ... '''
  ... [buildout]
  ... parts = apache
  ... offline = true
  ...
  ... [apache]
  ... recipe = isotoma.recipe.apache:wsgi
  ... serveradmin = nobody@localhost
  ... interface = 192.168.0.99:8080
  ... sitename = localhost
  ... daemon = yes
  ... processgroup = site1
  ... user = www-data
  ... group = www-data
  ... processes = 50
  ... threads = 9001
  ... wsgi = /bin/foo.wsgi
  ... ''')

Now we can run buildout::

  >>> print system(join('bin', 'buildout')),
  Uninstalling apache.
  Installing apache.

The template was indeed created::

  >>> cat('parts/apache/apache.cfg')
  # vim: syntax=apache:
  <BLANKLINE>
  <VirtualHost 192.168.0.99:8080:80>
      ServerName localhost
      ServerAdmin nobody@localhost
      CustomLog /var/log/apache2/localhost-access.log combined
      ErrorLog /var/log/apache2/localhost-error.log
      UseCanonicalName Off
      Options -Indexes
  <BLANKLINE>
      WSGIDaemonProcess site1 user=www-data group=www-data processes=50 threads=9001
      WSGIProcessGroup site1
  <BLANKLINE>
  <BLANKLINE>
      WSGIScriptAlias / /bin/foo.wsgi
  </VirtualHost>
  <BLANKLINE>
  # conditional, include lines


Aliases
=======

If this is a django site you might want to have apache serve your static directory

  >>> write('buildout.cfg',
  ... '''
  ... [buildout]
  ... parts = apache
  ... offline = true
  ...
  ... [apache]
  ... recipe = isotoma.recipe.apache:wsgi
  ... serveradmin = nobody@localhost
  ... interface = 192.168.0.99:8080
  ... sitename = localhost
  ... daemon = yes
  ... processgroup = site1
  ... user = www-data
  ... group = www-data
  ... processes = 50
  ... threads = 9001
  ... wsgi = /bin/foo.wsgi
  ... static_aliases =
  ...     /static/:/var/local/sites/mysite/static
  ... ''')

Now we can run buildout::

  >>> print system(join('bin', 'buildout')),
  Uninstalling apache.
  Installing apache.

The template was indeed created::

  >>> cat('parts/apache/apache.cfg')
  # vim: syntax=apache:
  <BLANKLINE>
  <VirtualHost 192.168.0.99:8080:80>
      ServerName localhost
      ServerAdmin nobody@localhost
      CustomLog /var/log/apache2/localhost-access.log combined
      ErrorLog /var/log/apache2/localhost-error.log
      UseCanonicalName Off
      Options -Indexes
  <BLANKLINE>
      WSGIDaemonProcess site1 user=www-data group=www-data processes=50 threads=9001
      WSGIProcessGroup site1
  <BLANKLINE>
      Alias /static/ /var/local/sites/mysite/static
  <BLANKLINE>
      WSGIScriptAlias / /bin/foo.wsgi
  </VirtualHost>
  <BLANKLINE>
  # conditional, include lines

Pass Authorization
=======

If this is a django site you might want to use basic auth and access the headers with the username/password in

  >>> write('buildout.cfg',
  ... '''
  ... [buildout]
  ... parts = apache
  ... offline = true
  ...
  ... [apache]
  ... recipe = isotoma.recipe.apache:wsgi
  ... serveradmin = nobody@localhost
  ... interface = 192.168.0.99:8080
  ... sitename = localhost
  ... daemon = yes
  ... processgroup = site1
  ... user = www-data
  ... group = www-data
  ... processes = 50
  ... threads = 9001
  ... wsgi = /bin/foo.wsgi
  ... static_aliases =
  ...     /static/:/var/local/sites/mysite/static
  ...     /admin/media/:/var/local/sites/mysite/admin/media
  ... basicauth = yes
  ... ''')

Now we can run buildout::

  >>> print system(join('bin', 'buildout')),
  Uninstalling apache.
  Installing apache.

The template was indeed created::

  >>> cat('parts/apache/apache.cfg')
  # vim: syntax=apache:
  <BLANKLINE>
  <VirtualHost 192.168.0.99:8080:80>
      ServerName localhost
      ServerAdmin nobody@localhost
      CustomLog /var/log/apache2/localhost-access.log combined
      ErrorLog /var/log/apache2/localhost-error.log
      UseCanonicalName Off
      Options -Indexes
  <BLANKLINE>
      WSGIDaemonProcess site1 user=www-data group=www-data processes=50 threads=9001
      WSGIProcessGroup site1
  <BLANKLINE>
      Alias /static/ /var/local/sites/mysite/static
      Alias /admin/media/ /var/local/sites/mysite/admin/media
  <BLANKLINE>
      WSGIScriptAlias / /bin/foo.wsgi
      WSGIPassAuthorization On
  </VirtualHost>
  <BLANKLINE>
  # conditional, include lines

Next we test the indexes option, to ensure that if we want directory Indexes
enabled, that they are::

  >>> write('buildout.cfg',
  ... '''
  ... [buildout]
  ... parts = apache
  ... offline = true
  ...
  ... [apache]
  ... recipe = isotoma.recipe.apache:wsgi
  ... serveradmin = nobody@localhost
  ... interface = 192.168.0.99
  ... sitename = localhost
  ... daemon = no
  ... wsgi = /bin/foo.wsgi
  ... indexes = on
  ... ''')

Now we can run buildout::

  >>> print system(join('bin', 'buildout')),
  Uninstalling apache.
  Installing apache.

The template was indeed created and we can confirm that there is no -Indexes
directive::

  >>> cat('parts/apache/apache.cfg')
  # vim: syntax=apache:
  <BLANKLINE>
  <VirtualHost 192.168.0.99:80>
      ServerName localhost
      ServerAdmin nobody@localhost
      CustomLog /var/log/apache2/localhost-access.log combined
      ErrorLog /var/log/apache2/localhost-error.log
  <BLANKLINE>
      UseCanonicalName Off
  <BLANKLINE>
  <BLANKLINE>
      WSGIScriptAlias / /bin/foo.wsgi
  </VirtualHost>
  <BLANKLINE>
  # conditional, include lines


