Detailed Description
********************

Specify multiple BasicAuth <Location>s using the protected option
=================================================================

Add two protected areas to test the "protected" option::

  >>> write('buildout.cfg',
  ... '''
  ... [buildout]
  ... parts = apache-protected
  ... offline = true
  ...
  ... [apache-protected]
  ... recipe = isotoma.recipe.apache:wsgi
  ... interface = *
  ... http_port = 80
  ... https_port = 443
  ... sitename = example.com
  ... serveradmin = test@example.com
  ... daemon = True
  ... processgroup = btrscheduler
  ... user = btrscheduler
  ... group = btrscheduler
  ... processes = 5
  ... threads = 15
  ... wsgi = /path/to/trac.wsgi
  ... static_aliases =
  ...     /static/ /goo/bob/static
  ... passwdfile = /tmp/apache-wsgi-protected-passwords
  ... protected =
  ...     /admin:site admin:myuser:mypassword
  ...     /userarea:user area:auser:apassword
  ... ''')

Run buildout::

  >>> print system(join('bin', 'buildout')),
  Installing apache-protected.
  Unused options for apache-protected: 'processgroup' 'processes' 'group' 'sitename' 'wsgi' 'threads' 'serveradmin' 'interface' 'user'.

Let's check that the template was created::

  >>> cat('parts/apache-protected/apache.cfg')
  # vim: syntax=apache:
  <VirtualHost *:80>
      ServerName example.com
      ServerAdmin test@example.com
      CustomLog /var/log/apache2/example.com-access.log combined
      ErrorLog /var/log/apache2/example.com-error.log
  <BLANKLINE>
      <Location /admin>
          Order Allow,Deny
          allow from all
          AuthType Basic
          AuthName "site admin"
          AuthUserFile /tmp/apache-wsgi-protected-passwords
          Require user myuser
      </Location>
      <Location /userarea>
          Order Allow,Deny
          allow from all
          AuthType Basic
          AuthName "user area"
          AuthUserFile /tmp/apache-wsgi-protected-passwords
          Require user auser
      </Location>
      Options -Indexes
  <BLANKLINE>
      WSGIDaemonProcess btrscheduler user=btrscheduler group=btrscheduler processes=5 threads=15
      WSGIProcessGroup btrscheduler
  <BLANKLINE>
      Alias /static/ /goo/bob/static 
  <BLANKLINE>
      WSGIScriptAlias / /path/to/trac.wsgi
  </VirtualHost>
  # conditional, include lines

Check for the existence of the password file::

  >>> import os
  >>> os.path.exists('/tmp/apache-wsgi-protected-passwords')
  True
