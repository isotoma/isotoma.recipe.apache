Detailed Description
********************

Turn on Basic Authentication
============================

Let's add some basic authentication for <Location />::

  >>> write('buildout.cfg',
  ... '''
  ... [buildout]
  ... parts = apache
  ... offline = true
  ...
  ... [apache]
  ... recipe = isotoma.recipe.apache:wsgi
  ... interface = *
  ... http_port = 80
  ... https_port = 443
  ... sitename = example.com
  ... serveradmin = test@example.com
  ... daemon = True
  ... processgroup = btrscheduler
  ... user = btrscheduler
  ... group = btrscheduler
  ... processes = 5
  ... threads = 15
  ... wsgi = /path/to/trac.wsgi
  ... basicauth = true
  ... static_aliases =
  ...     /static/ /goo/bob/static
  ... passwdfile = /tmp/apache-wsgi-auth-passwords
  ... username = testusername
  ... password = testpassword
  ... realm = something somewhere
  ... ''')

Now let's run buildout::

  >>> print system(join('bin', 'buildout'))
  Installing apache.
  Unused options for apache: 'processgroup' 'processes' 'realm' 'sitename' 'wsgi' 'threads' 'serveradmin' 'interface' 'group' 'user'.


Let's check that the template was created::

  >>> cat('parts/apache/apache.cfg')
  # vim: syntax=apache:
  <VirtualHost *:80>
      ServerName example.com
      ServerAdmin test@example.com
      CustomLog /var/log/apache2/example.com-access.log combined
      ErrorLog /var/log/apache2/example.com-error.log
      UseCanonicalName Off
  <BLANKLINE>
      <Location />
          Options Indexes FollowSymLinks MultiViews
          Order Deny,Allow
          allow from all
          AuthType Basic
          AuthName "something somewhere"
          AuthUserFile /tmp/apache-wsgi-auth-passwords
          Require user testusername
      </Location>
      Options -Indexes
  <BLANKLINE>
      WSGIDaemonProcess btrscheduler user=btrscheduler group=btrscheduler processes=5 threads=15
      WSGIProcessGroup btrscheduler
  <BLANKLINE>
      Alias /static/ /goo/bob/static 
  <BLANKLINE>
      WSGIScriptAlias / /path/to/trac.wsgi
      WSGIPassAuthorization On
  </VirtualHost>
  <BLANKLINE>
  # conditional, include lines

And check that the passwd file was created::

  >>> import os
  >>> os.path.exists('/tmp/apache-wsgi-auth-passwords')
  True
